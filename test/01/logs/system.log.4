[2017-12-18 20:23:01.915] [INFO] asgc - loadServices finished.
[2017-12-18 20:23:01.915] [INFO] asgc - loadViews ...
[2017-12-18 20:23:01.915] [INFO] asgc - load D:/myspace/npm/asgc-web/test/01/view/a.html
[2017-12-18 20:23:01.915] [INFO] asgc - load D:/myspace/npm/asgc-web/test/01/view/index.html
[2017-12-18 20:23:01.915] [INFO] asgc - load D:/myspace/npm/asgc-web/test/01/view/test1.html
[2017-12-18 20:23:01.915] [INFO] asgc - load D:/myspace/npm/asgc-web/test/01/view/WEB-INF/a.html
[2017-12-18 20:23:01.915] [INFO] asgc - load D:/myspace/npm/asgc-web/test/01/view/WEB-INF/hello3.html
[2017-12-18 20:23:01.915] [INFO] asgc - loadViews finished.
[2017-12-18 20:23:01.915] [INFO] asgc - loadProjectRouter ...
[2017-12-18 20:23:01.915] [INFO] asgc - loadProjectRouter finished.
[2017-12-18 20:23:01.915] [INFO] asgc - loadDefaultRouter ...
[2017-12-18 20:23:01.915] [INFO] asgc - loadDefaultRouter finished.
[2017-12-18 20:23:01.915] [INFO] asgc - router: /hello /hello
[2017-12-18 20:23:01.915] [INFO] asgc - router: /hello2 /hello2
[2017-12-18 20:23:01.915] [INFO] asgc - router: /hello3 /hello3
[2017-12-18 20:23:01.915] [INFO] asgc - router: /hello4 /hello4
[2017-12-18 20:23:01.915] [INFO] asgc - router: /test1 /test1
[2017-12-18 20:23:01.915] [INFO] asgc - router: /test2 /test2
[2017-12-18 20:23:01.915] [INFO] asgc - router: /test3 /test3
[2017-12-18 20:23:01.915] [INFO] asgc - router: /test4 /test4
[2017-12-18 20:23:01.915] [INFO] asgc - router: /a /a
[2017-12-18 20:23:01.915] [INFO] asgc - router: /b /b
[2017-12-18 20:23:01.915] [INFO] asgc - router: www www
[2017-12-18 20:23:01.915] [INFO] asgc - router: /testadd /testadd
[2017-12-18 20:23:01.915] [INFO] asgc - router: /testsub /testsub
[2017-12-18 20:23:01.915] [INFO] asgc - router: /welcome www
[2017-12-18 20:23:01.915] [INFO] asgc - router: /aa /WEB-INF/a.html
[2017-12-18 20:23:01.915] [INFO] asgc - router: /_pages/404.html D:/myspace/npm/asgc-web/pages/404.html
[2017-12-18 20:23:01.915] [INFO] asgc - router: /_pages/css/animate.css D:/myspace/npm/asgc-web/pages/css/animate.css
[2017-12-18 20:23:01.915] [INFO] asgc - router: /_pages/css/bootstrap.min.css D:/myspace/npm/asgc-web/pages/css/bootstrap.min.css
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/css/style.css D:/myspace/npm/asgc-web/pages/css/style.css
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/css/style.css.map D:/myspace/npm/asgc-web/pages/css/style.css.map
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/favicon.ico D:/myspace/npm/asgc-web/pages/favicon.ico
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/bootstrap/glyphicons-halflings-regular.eot D:/myspace/npm/asgc-web/pages/fonts/bootstrap/glyphicons-halflings-regular.eot
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/bootstrap/glyphicons-halflings-regular.svg D:/myspace/npm/asgc-web/pages/fonts/bootstrap/glyphicons-halflings-regular.svg
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/bootstrap/glyphicons-halflings-regular.ttf D:/myspace/npm/asgc-web/pages/fonts/bootstrap/glyphicons-halflings-regular.ttf
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/bootstrap/glyphicons-halflings-regular.woff D:/myspace/npm/asgc-web/pages/fonts/bootstrap/glyphicons-halflings-regular.woff
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/bootstrap/glyphicons-halflings-regular.woff2 D:/myspace/npm/asgc-web/pages/fonts/bootstrap/glyphicons-halflings-regular.woff2
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/icomoon/icomoon.eot D:/myspace/npm/asgc-web/pages/fonts/icomoon/icomoon.eot
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/icomoon/icomoon.svg D:/myspace/npm/asgc-web/pages/fonts/icomoon/icomoon.svg
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/icomoon/icomoon.ttf D:/myspace/npm/asgc-web/pages/fonts/icomoon/icomoon.ttf
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/fonts/icomoon/icomoon.woff D:/myspace/npm/asgc-web/pages/fonts/icomoon/icomoon.woff
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/images/404.svg D:/myspace/npm/asgc-web/pages/images/404.svg
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/bootstrap.min.js D:/myspace/npm/asgc-web/pages/js/bootstrap.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/jquery.min.js D:/myspace/npm/asgc-web/pages/js/jquery.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/jquery.vide.min.js D:/myspace/npm/asgc-web/pages/js/jquery.vide.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/jquery.waypoints.min.js D:/myspace/npm/asgc-web/pages/js/jquery.waypoints.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/main.js D:/myspace/npm/asgc-web/pages/js/main.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/modernizr-2.6.2.min.js D:/myspace/npm/asgc-web/pages/js/modernizr-2.6.2.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/js/respond.min.js D:/myspace/npm/asgc-web/pages/js/respond.min.js
[2017-12-18 20:23:01.930] [INFO] asgc - router: /_pages/sass/style.scss D:/myspace/npm/asgc-web/pages/sass/style.scss
[2017-12-18 20:23:01.930] [INFO] asgc - router: /a.html D:/myspace/npm/asgc-web/test/01/view/a.html
[2017-12-18 20:23:01.930] [INFO] asgc - router: /index.html D:/myspace/npm/asgc-web/test/01/view/index.html
[2017-12-18 20:23:01.930] [INFO] asgc - router: /test1.html D:/myspace/npm/asgc-web/test/01/view/test1.html
[2017-12-18 20:23:01.930] [INFO] asgc - router: / /index.html
[2017-12-18 20:23:01.930] [INFO] asgc - router: /favicon.ico D:/myspace/npm/asgc-web/pages/favicon.ico
[2017-12-18 20:23:01.930] [INFO] asgc - startWebapp ...
[2017-12-18 20:23:01.930] [INFO] asgc - create server ...
[2017-12-18 20:23:01.930] [INFO] asgc - startWebapp finished.
[2017-12-18 20:23:01.930] [INFO] asgc - 
              _____     _____     _____ 
    /\       / ____|   / ____|   / ____|
   /  \     | (___    | |  __   | |     
  / /\ \     \___ \   | | |_ |  | |     
 / ____ \    ____) |  | |__| |  | |____ 
/_/    \_\  |_____/    \_____|   \_____|


[2017-12-18 20:23:01.930] [INFO] asgc - 启动成功! http://localhost:8088
[2017-12-18 20:23:06.264] [INFO] asgc - requestParse ... /hello
[2017-12-18 20:23:06.264] [INFO] asgc - parse url /hello
[2017-12-18 20:23:06.265] [INFO] asgc - parse req type...
[2017-12-18 20:23:06.265] [INFO] asgc - req: { url: '/hello',
  params: {},
  suffix: '',
  method: '',
  type: 'action' }
[2017-12-18 20:23:06.268] [INFO] asgc - requestDispatch ...
[2017-12-18 20:23:06.268] [INFO] asgc - doAction:  /hello {}
[2017-12-18 20:23:06.269] [INFO] asgc - hello action
[2017-12-18 20:23:06.269] [INFO] asgc - action return data: hello world !
[2017-12-18 20:23:06.269] [INFO] asgc - data type: string
[2017-12-18 20:23:06.269] [INFO] asgc - renderString: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { data: [Function], end: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 970,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4509,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        [Symbol(asyncId)]: 267,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 268,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4513,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 241,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 243,
     [Symbol(triggerId)]: 145 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 970,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4509,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        [Symbol(asyncId)]: 267,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 268,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4513,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 241,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 243,
     [Symbol(triggerId)]: 145 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:8088',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36',
     'upgrade-insecure-requests': '1',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.9',
     cookie: 'Idea-d796403=d68d17cb-7b13-43c7-a4b9-ea67a4880177; rememberMe=JELHZThtsEibK9un60g6NokWm/yUMpDuH3m4iTz258rDO3WGBqH6Pmoj4vOcAm/XCbPxE4uJARej3cnDabPAAOxb0C0S5Zta/QqOim6aP3QbVd/qPGYMlsOqMA/kFXkCoawVyw5tfantOQ/SmJ6gwsDRmqyg4lK9Yg3z2VRG4YTefwe7jii31pagSAb2l19xu7UHID6DKdWXjuwgnoV/J+ouRV995CE1fHZ+n2onl7gv08h73LKjmcl2+fyjFRkWLI1yBEBkPXUGHBWUe9Yw8WjSLCYeJqDPDH9fTSoOdPy4fM6a3ghWHVC/VlMF1hVfRHFHR93J/SSSqwzIIuQDDMYuZ9mXO92fcy/xQ+fSC8WmbXX4olxX++oTBHi4X9UsrjewZP2+XZ+i2DNdgu0u8aFFT9GlxcuITuBr5XY93LOBMhmMnQaHyIp2OB77nX9HxkmS4JD49gHAXWr7kbbJUN3nommXnIakZuNFSiSffc+tUxLQMWGgmJd3RYvkQZGX' },
  rawHeaders: 
   [ 'Host',
     'localhost:8088',
     'Connection',
     'keep-alive',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36',
     'Upgrade-Insecure-Requests',
     '1',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.9',
     'Cookie',
     'Idea-d796403=d68d17cb-7b13-43c7-a4b9-ea67a4880177; rememberMe=JELHZThtsEibK9un60g6NokWm/yUMpDuH3m4iTz258rDO3WGBqH6Pmoj4vOcAm/XCbPxE4uJARej3cnDabPAAOxb0C0S5Zta/QqOim6aP3QbVd/qPGYMlsOqMA/kFXkCoawVyw5tfantOQ/SmJ6gwsDRmqyg4lK9Yg3z2VRG4YTefwe7jii31pagSAb2l19xu7UHID6DKdWXjuwgnoV/J+ouRV995CE1fHZ+n2onl7gv08h73LKjmcl2+fyjFRkWLI1yBEBkPXUGHBWUe9Yw8WjSLCYeJqDPDH9fTSoOdPy4fM6a3ghWHVC/VlMF1hVfRHFHR93J/SSSqwzIIuQDDMYuZ9mXO92fcy/xQ+fSC8WmbXX4olxX++oTBHi4X9UsrjewZP2+XZ+i2DNdgu0u8aFFT9GlxcuITuBr5XY93LOBMhmMnQaHyIp2OB77nX9HxkmS4JD49gHAXWr7kbbJUN3nommXnIakZuNFSiSffc+tUxLQMWGgmJd3RYvkQZGX' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/hello',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 970,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4509,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        [Symbol(asyncId)]: 267,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 268,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4513,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 241,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 243,
     [Symbol(triggerId)]: 145 },
  _consuming: true,
  _dumped: false,
  read: [Function] }
[2017-12-18 20:23:06.314] [INFO] asgc - requestParse ... /favicon.ico
[2017-12-18 20:23:06.314] [INFO] asgc - doView: /favicon.ico
[2017-12-18 20:23:08.636] [INFO] asgc - requestParse ... /hello4
[2017-12-18 20:23:08.637] [INFO] asgc - parse url /hello4
[2017-12-18 20:23:08.637] [INFO] asgc - parse req type...
[2017-12-18 20:23:08.637] [INFO] asgc - req: { url: '/hello4',
  params: {},
  suffix: '',
  method: '',
  type: 'action' }
[2017-12-18 20:23:08.638] [INFO] asgc - requestDispatch ...
[2017-12-18 20:23:08.638] [INFO] asgc - doAction:  /hello4 {}
[2017-12-18 20:23:08.639] [INFO] asgc - hello4 action
[2017-12-18 20:23:08.639] [INFO] asgc - action return data: view:/index.html
[2017-12-18 20:23:08.639] [INFO] asgc - data type: string
[2017-12-18 20:23:08.639] [INFO] asgc - renderString: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { data: [Function], end: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 971,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 171,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4564,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 241,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 243,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 6886,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 247,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 248,
     [Symbol(triggerId)]: 145 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 971,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 171,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4564,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 241,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 243,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 6886,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 247,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 248,
     [Symbol(triggerId)]: 145 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:8088',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36',
     'upgrade-insecure-requests': '1',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.9',
     cookie: 'Idea-d796403=d68d17cb-7b13-43c7-a4b9-ea67a4880177; rememberMe=JELHZThtsEibK9un60g6NokWm/yUMpDuH3m4iTz258rDO3WGBqH6Pmoj4vOcAm/XCbPxE4uJARej3cnDabPAAOxb0C0S5Zta/QqOim6aP3QbVd/qPGYMlsOqMA/kFXkCoawVyw5tfantOQ/SmJ6gwsDRmqyg4lK9Yg3z2VRG4YTefwe7jii31pagSAb2l19xu7UHID6DKdWXjuwgnoV/J+ouRV995CE1fHZ+n2onl7gv08h73LKjmcl2+fyjFRkWLI1yBEBkPXUGHBWUe9Yw8WjSLCYeJqDPDH9fTSoOdPy4fM6a3ghWHVC/VlMF1hVfRHFHR93J/SSSqwzIIuQDDMYuZ9mXO92fcy/xQ+fSC8WmbXX4olxX++oTBHi4X9UsrjewZP2+XZ+i2DNdgu0u8aFFT9GlxcuITuBr5XY93LOBMhmMnQaHyIp2OB77nX9HxkmS4JD49gHAXWr7kbbJUN3nommXnIakZuNFSiSffc+tUxLQMWGgmJd3RYvkQZGX' },
  rawHeaders: 
   [ 'Host',
     'localhost:8088',
     'Connection',
     'keep-alive',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36',
     'Upgrade-Insecure-Requests',
     '1',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.9',
     'Cookie',
     'Idea-d796403=d68d17cb-7b13-43c7-a4b9-ea67a4880177; rememberMe=JELHZThtsEibK9un60g6NokWm/yUMpDuH3m4iTz258rDO3WGBqH6Pmoj4vOcAm/XCbPxE4uJARej3cnDabPAAOxb0C0S5Zta/QqOim6aP3QbVd/qPGYMlsOqMA/kFXkCoawVyw5tfantOQ/SmJ6gwsDRmqyg4lK9Yg3z2VRG4YTefwe7jii31pagSAb2l19xu7UHID6DKdWXjuwgnoV/J+ouRV995CE1fHZ+n2onl7gv08h73LKjmcl2+fyjFRkWLI1yBEBkPXUGHBWUe9Yw8WjSLCYeJqDPDH9fTSoOdPy4fM6a3ghWHVC/VlMF1hVfRHFHR93J/SSSqwzIIuQDDMYuZ9mXO92fcy/xQ+fSC8WmbXX4olxX++oTBHi4X9UsrjewZP2+XZ+i2DNdgu0u8aFFT9GlxcuITuBr5XY93LOBMhmMnQaHyIp2OB77nX9HxkmS4JD49gHAXWr7kbbJUN3nommXnIakZuNFSiSffc+tUxLQMWGgmJd3RYvkQZGX' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/hello4',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 971,
        _externalStream: [External],
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::8088',
        [Symbol(asyncId)]: 145 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 171,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4564,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 241,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 243,
        [Symbol(triggerId)]: 145 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 6886,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(outHeadersKey)]: null },
     [Symbol(asyncId)]: 247,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 248,
     [Symbol(triggerId)]: 145 },
  _consuming: true,
  _dumped: false,
  read: [Function] }
